<#@ template language="C#"  #>
<#@ assembly name="System.Core" #>

<#@ include file="Helpers.tt" #>
<#@ include file="StringExtensions.tt" #>
<#@ include file="GeneralExtensions.tt" #>
<#@ include file="Inflector.tt" #>

<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="HedgehogDevelopment.SitecoreProject.VSIP.CodeGeneration.Models" #>

<#@ parameter name="Model" type="HedgehogDevelopment.SitecoreProject.VSIP.CodeGeneration.Models.ProjectHeader" #>
<#@ parameter name="DefaultNamespace" type="System.String" #>

#pragma warning disable 1591
#pragma warning disable 0108
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Team Development for Sitecore.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;   
using System.Collections.Generic;   
using System.Collections.Specialized; 
using System.Linq;
using System.Text;
using Glass.Mapper.Sc.Configuration.Attributes;
using Glass.Mapper.Sc.Configuration;
using Glass.Mapper.Sc.Fields;
using Sitecore.Globalization;
using Sitecore.Data.Items;

<#
// Calculate the top leve namespace as configured in the target project and
// base namespace as defined in the TDS project
string fullNamespace = JoinNamespaces(DefaultNamespace, Model.BaseNamespace);
#>

namespace <#=fullNamespace #>
{
	using global::System.IO;
	using Sitecore.Data;
	using Sitecore.Data.Items;

	public partial interface IGlassBase 
	{
		[SitecoreId]
		Guid Id { get; }

		[SitecoreInfo(SitecoreInfoType.Language)]
        Language Language { get; }
		
        [SitecoreInfo(SitecoreInfoType.Version)]
        int Version { get; }

        [SitecoreInfo(SitecoreInfoType.Url)]
        string Url { get; }

        [SitecoreInfo(SitecoreInfoType.Name)]
        string Name { get; }

		[SitecoreInfo(SitecoreInfoType.ContentPath)]
		string Path { get; }
		
		[SitecoreInfo(SitecoreInfoType.FullPath)]
		string FullPath { get; }
		
		[SitecoreInfo(SitecoreInfoType.BaseTemplateIds)]
        IEnumerable<Guid> BaseTemplateIds { get; }

        [SitecoreInfo(SitecoreInfoType.TemplateId)]
        Guid ItemTemplateId { get; }

		[SitecoreItem]
        Item Item { get; }
	
	    [SitecoreChildren]
	    IEnumerable<Item> Children { get; }

        bool InheritsTemplate(Guid templateGuid);

		bool InheritsTemplate(ID templateId);
	}

	public abstract partial class GlassBase : IGlassBase 
	{
		[SitecoreId]
		public virtual Guid Id{ get; private set; }

		[SitecoreInfo(SitecoreInfoType.Language)]
        public virtual Language Language{ get; private set; }

        [SitecoreInfo(SitecoreInfoType.Version)]
        public virtual int Version { get; private set; }

		[SitecoreInfo(SitecoreInfoType.Url)]
        public virtual string Url { get; private set;}
		
        [SitecoreInfo(SitecoreInfoType.Name)]
        public virtual string Name { get; private set;}

		[SitecoreInfo(SitecoreInfoType.ContentPath)]
		public virtual string Path { get; private set; }

		[SitecoreInfo(SitecoreInfoType.FullPath)]
		public virtual string FullPath { get; private set; }
		
		[SitecoreItem]
        public virtual Item Item { get; private set; }
	
	    [SitecoreChildren]
	    public virtual IEnumerable<Item> Children { get; private set; }
		
		[SitecoreInfo(SitecoreInfoType.BaseTemplateIds)]
        public virtual IEnumerable<Guid> BaseTemplateIds { get; private set; }

        [SitecoreInfo(SitecoreInfoType.TemplateId)]
        public virtual Guid ItemTemplateId { get; private set; }

        /// <summary>
        /// Returns a bool indicating if the item inherits the given template
        /// </summary>
        /// <param name="templateGuid">Template Guid</param>
        /// <returns>True if the item is or inherits from a template</returns>
        public bool InheritsTemplate(Guid templateGuid)
        {
            return this.BaseTemplateIds.Contains(templateGuid) || this.ItemTemplateId.Equals(templateGuid);
        }

		/// <summary>
        /// Returns a bool indicating if the item inherits the given template
        /// </summary>
        /// <param name="templateId">Template ID</param>
        /// <returns>True if the item is or inherits from a template</returns>
		public bool InheritsTemplate(ID templateId)
		{
			return this.BaseTemplateIds.Contains(templateId.Guid) || this.ItemTemplateId.Equals(templateId.Guid);
		}
	}
	
    [SitecoreType(TemplateId = "{962B53C4-F93B-4DF9-9821-415C867B8903}")]
	public class MediaFile : GlassBase {
	
		[SitecoreInfo(SitecoreInfoType.MediaUrl)]
        public virtual string Url { get; private set;}
   
		[SitecoreField("Attachment")]
		public virtual Stream File { get; set; }
		
		[SitecoreField("File Path")]
        public virtual string FilePath { get; set; }

        [SitecoreField("Mime Type")]
        public virtual string MimeType { get; set; }

        [SitecoreField("Title")]
        public virtual string Title { get; set; }

        [SitecoreField("Format")]
        public virtual string Format { get; set; }

        [SitecoreField("Description")]
        public virtual string Description { get; set; }
		
        [SitecoreField("Keywords")]
        public virtual string Keywords { get; set; }

        [SitecoreField("Extension")]
        public virtual string Extension { get; set; }
	}
	
    [SitecoreType(TemplateId = "{6D1CD897-1936-4A3A-A511-289A94C2A7B1}")]
	public class DictionaryEntry : GlassBase 
	{
		[SitecoreField("Key")]
        public virtual string Key { get; private set;}
   
		[SitecoreField("Phrase")]
		public virtual string Phrase { get; set; }
	}
}